{"ast":null,"code":"const addLeadingZero = value => value < 10 ? `0${value}` : value;\n\nconst addTimezonOffset = (date, time) => {\n  const match = /GMT\\+\\d+/.test(date.toString());\n  let result = time;\n\n  if (match) {\n    result = time + date.getTimezoneOffset() * 60000;\n  }\n\n  return result;\n};\n\nconst setupDate = unixTimestamp => {\n  const date = new Date(unixTimestamp * 1000);\n  const utc = date.getTime();\n  return new Date(addTimezonOffset(date, utc));\n};\n\nexport default function (unixTimestamp, locale = 'en-US') {\n  const finalDate = setupDate(unixTimestamp);\n  const year = finalDate.getFullYear();\n  const weekDay = finalDate.getDay();\n  let month = finalDate.getMonth() + 1;\n  let day = finalDate.getDate();\n  let hours = finalDate.getHours();\n  let minutes = finalDate.getMinutes();\n  month = addLeadingZero(month);\n  day = addLeadingZero(day);\n  hours = addLeadingZero(hours);\n  minutes = addLeadingZero(minutes);\n  const localeDateString = finalDate.toLocaleDateString(locale, {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric'\n  });\n  return {\n    localeDateString,\n    weekDay,\n    day,\n    month,\n    year,\n    hours,\n    minutes\n  };\n}\nexport { addTimezonOffset, addLeadingZero, setupDate };","map":{"version":3,"sources":["/var/www/html/react-weather-app/src/helpers/time.js"],"names":["addLeadingZero","value","addTimezonOffset","date","time","match","test","toString","result","getTimezoneOffset","setupDate","unixTimestamp","Date","utc","getTime","locale","finalDate","year","getFullYear","weekDay","getDay","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","localeDateString","toLocaleDateString","weekday"],"mappings":"AAAA,MAAMA,cAAc,GAAIC,KAAD,IAAYA,KAAK,GAAG,EAAT,GAAgB,IAAGA,KAAM,EAAzB,GAA6BA,KAA/D;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AACvC,QAAMC,KAAK,GAAG,WAAWC,IAAX,CAAgBH,IAAI,CAACI,QAAL,EAAhB,CAAd;AACA,MAAIC,MAAM,GAAGJ,IAAb;;AAEA,MAAIC,KAAJ,EAAW;AACTG,IAAAA,MAAM,GAAGJ,IAAI,GAAGD,IAAI,CAACM,iBAAL,KAA2B,KAA3C;AACD;;AAED,SAAOD,MAAP;AACD,CATD;;AAWA,MAAME,SAAS,GAAIC,aAAD,IAAmB;AACnC,QAAMR,IAAI,GAAG,IAAIS,IAAJ,CAASD,aAAa,GAAG,IAAzB,CAAb;AACA,QAAME,GAAG,GAAGV,IAAI,CAACW,OAAL,EAAZ;AAEA,SAAO,IAAIF,IAAJ,CAASV,gBAAgB,CAACC,IAAD,EAAOU,GAAP,CAAzB,CAAP;AACD,CALD;;AAOA,eAAe,UAAUF,aAAV,EAAyBI,MAAM,GAAG,OAAlC,EAA2C;AACxD,QAAMC,SAAS,GAAGN,SAAS,CAACC,aAAD,CAA3B;AACA,QAAMM,IAAI,GAAGD,SAAS,CAACE,WAAV,EAAb;AACA,QAAMC,OAAO,GAAGH,SAAS,CAACI,MAAV,EAAhB;AACA,MAAIC,KAAK,GAAGL,SAAS,CAACM,QAAV,KAAuB,CAAnC;AACA,MAAIC,GAAG,GAAGP,SAAS,CAACQ,OAAV,EAAV;AACA,MAAIC,KAAK,GAAGT,SAAS,CAACU,QAAV,EAAZ;AACA,MAAIC,OAAO,GAAGX,SAAS,CAACY,UAAV,EAAd;AAEAP,EAAAA,KAAK,GAAGrB,cAAc,CAACqB,KAAD,CAAtB;AACAE,EAAAA,GAAG,GAAGvB,cAAc,CAACuB,GAAD,CAApB;AACAE,EAAAA,KAAK,GAAGzB,cAAc,CAACyB,KAAD,CAAtB;AACAE,EAAAA,OAAO,GAAG3B,cAAc,CAAC2B,OAAD,CAAxB;AAEA,QAAME,gBAAgB,GAAGb,SAAS,CAACc,kBAAV,CAA6Bf,MAA7B,EAAqC;AAAEgB,IAAAA,OAAO,EAAE,MAAX;AAAmBd,IAAAA,IAAI,EAAE,SAAzB;AAAoCI,IAAAA,KAAK,EAAE,MAA3C;AAAmDE,IAAAA,GAAG,EAAE;AAAxD,GAArC,CAAzB;AAEA,SAAO;AACLM,IAAAA,gBADK;AAELV,IAAAA,OAFK;AAGLI,IAAAA,GAHK;AAILF,IAAAA,KAJK;AAKLJ,IAAAA,IALK;AAMLQ,IAAAA,KANK;AAOLE,IAAAA;AAPK,GAAP;AASD;AAED,SAASzB,gBAAT,EAA2BF,cAA3B,EAA2CU,SAA3C","sourcesContent":["const addLeadingZero = (value) => (value < 10) ? `0${value}` : value;\n\nconst addTimezonOffset = (date, time) => {\n  const match = /GMT\\+\\d+/.test(date.toString());\n  let result = time;\n\n  if (match) {\n    result = time + date.getTimezoneOffset() * 60000;\n  }\n\n  return result;\n};\n\nconst setupDate = (unixTimestamp) => {\n  const date = new Date(unixTimestamp * 1000);\n  const utc = date.getTime();\n\n  return new Date(addTimezonOffset(date, utc));\n};\n\nexport default function (unixTimestamp, locale = 'en-US') {\n  const finalDate = setupDate(unixTimestamp);\n  const year = finalDate.getFullYear();\n  const weekDay = finalDate.getDay();\n  let month = finalDate.getMonth() + 1;\n  let day = finalDate.getDate();\n  let hours = finalDate.getHours();\n  let minutes = finalDate.getMinutes();\n\n  month = addLeadingZero(month);\n  day = addLeadingZero(day);\n  hours = addLeadingZero(hours);\n  minutes = addLeadingZero(minutes);\n\n  const localeDateString = finalDate.toLocaleDateString(locale, { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });\n\n  return {\n    localeDateString,\n    weekDay,\n    day,\n    month,\n    year,\n    hours,\n    minutes\n  };\n}\n\nexport { addTimezonOffset, addLeadingZero, setupDate };\n"]},"metadata":{},"sourceType":"module"}