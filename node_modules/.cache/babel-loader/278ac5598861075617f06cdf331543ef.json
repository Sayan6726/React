{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/react-weather-app/src/app/Home/index.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport Swiper from 'swiper';\nimport ForecastHourly from '../../components/ForecastHourly';\nimport ForecastDaily from '../../components/ForecastDaily';\nimport Location from '../../components/Location';\nimport Temperature from '../../components/Temperature';\nimport Navigation from '../../components/Navigation';\nimport GPSLocation from '../../components/GPSLocation';\nimport Info from '../../components/Info';\nimport DateCurrent from '../../components/DateCurrent';\nimport Refresh from '../../components/Refresh';\nimport PropTypes from 'prop-types';\n\nclass Home extends PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      currentForecast: 'hourly',\n      forecastIndex: ['hourly', 'daily']\n    };\n  }\n\n  componentDidMount() {\n    this.forecasts = [...document.querySelectorAll('.forecasts__period')];\n    this.swiper = new Swiper('.swiper-container', {\n      direction: 'horizontal',\n      loop: false\n    });\n    this.swiper.on('slideChangeTransitionEnd', () => {\n      this.setState({\n        currentForecast: this.state.forecastIndex[this.swiper.activeIndex]\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(GPSLocation, {\n        onGPSLocationClick: this.props.onGPSLocationClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Info, {\n        onInfoClick: this.props.onInfoClick,\n        onInfoClose: this.props.onInfoClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Location, {\n        location: this.props.currentCondition.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(DateCurrent, {\n        date: this.props.currentCondition.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Temperature, {\n        weather: this.props.currentCondition.weather,\n        temperature: this.props.currentCondition.temperature\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Refresh, {\n        onClick: this.props.onRefreshClick,\n        updating: this.props.updating,\n        time: this.props.lastUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"forecasts\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecasts__scroll-panel swiper-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"swiper-wrapper\",\n            children: [/*#__PURE__*/_jsxDEV(ForecastHourly, {\n              foreCastHourly: this.props.foreCastHourly\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(ForecastDaily, {\n              foreCastDaily: this.props.foreCastDaily\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n          currentForecast: this.state.currentForecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nHome.propTypes = {\n  foreCastHourly: PropTypes.array,\n  foreCastDaily: PropTypes.array,\n  updating: PropTypes.bool,\n  lastUpdate: PropTypes.string,\n  currentCondition: PropTypes.object,\n  onGPSLocationClick: PropTypes.func,\n  onInfoClick: PropTypes.func,\n  onInfoClose: PropTypes.func,\n  onRefreshClick: PropTypes.func\n};\nexport default Home;","map":{"version":3,"sources":["/var/www/html/react-weather-app/src/app/Home/index.js"],"names":["React","PureComponent","Fragment","Swiper","ForecastHourly","ForecastDaily","Location","Temperature","Navigation","GPSLocation","Info","DateCurrent","Refresh","PropTypes","Home","constructor","state","currentForecast","forecastIndex","componentDidMount","forecasts","document","querySelectorAll","swiper","direction","loop","on","setState","activeIndex","render","props","onGPSLocationClick","onInfoClick","onInfoClose","currentCondition","location","date","weather","temperature","onRefreshClick","updating","lastUpdate","foreCastHourly","foreCastDaily","propTypes","array","bool","string","object","func"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport Swiper from 'swiper';\nimport ForecastHourly from '../../components/ForecastHourly';\nimport ForecastDaily from '../../components/ForecastDaily';\nimport Location from '../../components/Location';\nimport Temperature from '../../components/Temperature';\nimport Navigation from '../../components/Navigation';\nimport GPSLocation from '../../components/GPSLocation';\nimport Info from '../../components/Info';\nimport DateCurrent from '../../components/DateCurrent';\nimport Refresh from '../../components/Refresh';\nimport PropTypes from 'prop-types';\n\nclass Home extends PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      currentForecast: 'hourly',\n      forecastIndex: ['hourly', 'daily'],\n    };\n  }\n\n  componentDidMount() {\n    this.forecasts = [...document.querySelectorAll('.forecasts__period')];\n\n    this.swiper = new Swiper('.swiper-container', {\n      direction: 'horizontal',\n      loop: false\n    });\n\n    this.swiper.on('slideChangeTransitionEnd', () => {\n      this.setState({ currentForecast: this.state.forecastIndex[this.swiper.activeIndex] });\n    });\n  }\n\n  render() {\n    return <Fragment>\n      <GPSLocation onGPSLocationClick={this.props.onGPSLocationClick} />\n      <Info onInfoClick={this.props.onInfoClick} onInfoClose={this.props.onInfoClose} />\n      <Location location={this.props.currentCondition.location} />\n      <DateCurrent date={this.props.currentCondition.date} />\n      <Temperature weather={this.props.currentCondition.weather} temperature={this.props.currentCondition.temperature} />\n      <Refresh onClick={this.props.onRefreshClick} updating={this.props.updating} time={this.props.lastUpdate} />\n      <section className=\"forecasts\">\n        <div className=\"forecasts__scroll-panel swiper-container\">\n          <div className=\"swiper-wrapper\">\n            <ForecastHourly foreCastHourly={this.props.foreCastHourly} />\n            <ForecastDaily foreCastDaily={this.props.foreCastDaily} />\n          </div>\n        </div>\n        <Navigation currentForecast={this.state.currentForecast} />\n      </section>\n    </Fragment>\n  }\n}\n\nHome.propTypes = {\n  foreCastHourly: PropTypes.array,\n  foreCastDaily: PropTypes.array,\n  updating: PropTypes.bool,\n  lastUpdate: PropTypes.string,\n  currentCondition: PropTypes.object,\n  onGPSLocationClick: PropTypes.func,\n  onInfoClick: PropTypes.func,\n  onInfoClose: PropTypes.func,\n  onRefreshClick: PropTypes.func\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}