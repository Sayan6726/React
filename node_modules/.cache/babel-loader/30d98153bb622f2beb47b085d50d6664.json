{"ast":null,"code":"class IpGeoLocation {\n  constructor(secret) {\n    this.endpoint = ip => `${process.env.REACT_APP_API_ENDPOINT}/ip?ip=${ip}`;\n\n    this.data = null;\n    this.secret = secret;\n  }\n\n  async fetch(ip) {\n    try {\n      const response = await fetch(this.endpoint(ip));\n      const result = await response.json();\n      this.data = result.data.geo;\n    } catch (error) {\n      throw new Error(`IpGeoLocation unable to fetch: ${error.message}`);\n    }\n  }\n\n}\n\nexport default IpGeoLocation;","map":{"version":3,"sources":["/var/www/html/react-weather-app/src/api/ipGeoLocation.js"],"names":["IpGeoLocation","constructor","secret","endpoint","ip","process","env","REACT_APP_API_ENDPOINT","data","fetch","response","result","json","geo","error","Error","message"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAClB,SAAKC,QAAL,GAAgBC,EAAE,IAAK,GAAEC,OAAO,CAACC,GAAR,CAAYC,sBAAuB,UAASH,EAAG,EAAxE;;AACA,SAAKI,IAAL,GAAY,IAAZ;AACA,SAAKN,MAAL,GAAcA,MAAd;AACD;;AAEU,QAALO,KAAK,CAACL,EAAD,EAAK;AACd,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMD,KAAK,CAAC,KAAKN,QAAL,CAAcC,EAAd,CAAD,CAA5B;AACA,YAAMO,MAAM,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAArB;AAEA,WAAKJ,IAAL,GAAYG,MAAM,CAACH,IAAP,CAAYK,GAAxB;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACd,YAAM,IAAIC,KAAJ,CAAW,kCAAiCD,KAAK,CAACE,OAAQ,EAA1D,CAAN;AACD;AACF;;AAhBiB;;AAmBpB,eAAehB,aAAf","sourcesContent":["class IpGeoLocation {\n  constructor(secret) {\n    this.endpoint = ip => `${process.env.REACT_APP_API_ENDPOINT}/ip?ip=${ip}`;\n    this.data = null;\n    this.secret = secret;\n  }\n\n  async fetch(ip) {\n    try {\n      const response = await fetch(this.endpoint(ip));\n      const result = await response.json();\n\n      this.data = result.data.geo;\n    } catch (error) {\n      throw new Error(`IpGeoLocation unable to fetch: ${error.message}`);\n    }\n  }\n}\n\nexport default IpGeoLocation;\n"]},"metadata":{},"sourceType":"module"}